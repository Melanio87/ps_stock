/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Connection.Coneccion;
import Entity.Empresa;
import Entity.JDesktopPaneComImage;
import Entity.Location;
import Entity.Util;
import java.awt.Color;
import java.awt.Container;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.PostLoad;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Melanio
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Integer niv = 0;
    public Integer su = 0;
    R_Productos r_pro;
    R_Clientes r_cli;
    inf_venta i_ven;
    inf_lisProd1 i_lisp;
    reg_deucli r_dcl;
    reg_usuario r_usu;
    Ventas_new ven;
    public reg_provee r_prove;
    reg_empresa r_emp;
    AnularVentas a_ven;
    reg_categ r_cate;
    reg_sect r_sect;
    reg_moneda r_mone;
    reg_mesas r_mesas;
    reg_epire r_expire;
    reg_cobro r_cobro;
   
    Empresa emp;

    JDesktopPane jDPPrincipal = new JDesktopPaneComImage("/image/backgrup_ps.png");

    @Override
    public void setContentPane(Container contentPane) {
        super.setContentPane(contentPane); //To change body of generated methods, choose Tools | Templates.
    }

    public Integer getNiv() {
        return niv;
    }

    public void setNiv(Integer niv) {
        this.niv = niv;
        
    }

    public Integer getSu() {
        return su;
    }

    public void setSu(Integer su) {
        this.su = su;
        habMenu();
        generarCopiadeSeguridad();
    }

    private void habMenu() {
        if (getNiv() == 1) {
            this.MIOperador.setVisible(true);
            this.jMI_regEmpres.setVisible(true);
            this.jMIregCate.setVisible(true);
            this.jMIregSect.setVisible(true);
            this.MIInfVentas.setVisible(true);
            this.MIProveedor.setVisible(true);
            this.jMIRPro.setVisible(true);
            this.jMIRegDeucli.setVisible(true);
            this.MILisProd.setVisible(true);
            this.jMenuExpire.setVisible(false);
            this.jMICobro.setVisible(true);
        } else {
            if (getNiv() == 2) {
                this.MIOperador.setVisible(false);
                this.jMI_regEmpres.setVisible(false);
                this.jMIregCate.setVisible(true);
                this.jMIregSect.setVisible(true);
                this.MIInfVentas.setVisible(false);
                this.MIProveedor.setVisible(true);
                this.jMIRPro.setVisible(true);
                this.jMIRegDeucli.setVisible(true);
                this.MILisProd.setVisible(true);
                 this.jMenuExpire.setVisible(false);
                 this.jMICobro.setVisible(true);
            } else {
                this.MIOperador.setVisible(false);
                this.jMI_regEmpres.setVisible(false);
                this.jMIregCate.setVisible(false);
                this.jMIregSect.setVisible(false);
                this.MIInfVentas.setVisible(false);
                this.MIProveedor.setVisible(false);
                this.jMIRPro.setVisible(false);
                this.jMIRegDeucli.setVisible(false);
                this.MILisProd.setVisible(false);
                 this.jMenuExpire.setVisible(false);
                 this.jMICobro.setVisible(true);
            }
        }
        this.jMenuItem1.setVisible(false);
        this.jMenuItem2.setVisible(false);
        
        if(getSu() == 1){
            this.jMenuExpire.setVisible(true);
        }
    }

    public Principal() {
        initComponents();
        ico();
        backImg();
        
    }
    
    

    private void ico() {
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/p_s.png"));
        setIconImage(icon);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMIVenta = new javax.swing.JMenuItem();
        MIAnuven = new javax.swing.JMenuItem();
        jMICobro = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMIRPro = new javax.swing.JMenuItem();
        jMIRegClie = new javax.swing.JMenuItem();
        jMIregmone = new javax.swing.JMenuItem();
        jMIGenCodBar = new javax.swing.JMenuItem();
        jMIRegDeucli = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        MILisProd = new javax.swing.JMenuItem();
        MIInfVentas = new javax.swing.JMenuItem();
        jMHerramienta = new javax.swing.JMenu();
        MIOperador = new javax.swing.JMenuItem();
        MIProveedor = new javax.swing.JMenuItem();
        jMIregCate = new javax.swing.JMenuItem();
        jMIregSect = new javax.swing.JMenuItem();
        jMI_regEmpres = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuExpire = new javax.swing.JMenuItem();
        jMIBackup = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Control");
        setExtendedState(6);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        jMenu1.setMnemonic('A');
        jMenu1.setText("Archivo");
        jMenu1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jMIVenta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        jMIVenta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIVenta.setText("Ventas");
        jMIVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIVentaActionPerformed(evt);
            }
        });
        jMenu1.add(jMIVenta);

        MIAnuven.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        MIAnuven.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        MIAnuven.setText("Anular Ventas");
        MIAnuven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIAnuvenActionPerformed(evt);
            }
        });
        jMenu1.add(MIAnuven);

        jMICobro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMICobro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMICobro.setText("Cobro");
        jMICobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICobroActionPerformed(evt);
            }
        });
        jMenu1.add(jMICobro);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edición");
        jMenu2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMIRPro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMIRPro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIRPro.setText("Registrar Productos");
        jMIRPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRProActionPerformed(evt);
            }
        });
        jMenu2.add(jMIRPro);

        jMIRegClie.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMIRegClie.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIRegClie.setText("Registrar Clientes");
        jMIRegClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRegClieActionPerformed(evt);
            }
        });
        jMenu2.add(jMIRegClie);

        jMIregmone.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMIregmone.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIregmone.setText("Registrar Moneda");
        jMIregmone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIregmoneActionPerformed(evt);
            }
        });
        jMenu2.add(jMIregmone);

        jMIGenCodBar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        jMIGenCodBar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIGenCodBar.setText("Generar Cód. de Barra");
        jMIGenCodBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGenCodBarActionPerformed(evt);
            }
        });
        jMenu2.add(jMIGenCodBar);

        jMIRegDeucli.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMIRegDeucli.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIRegDeucli.setText("Registrar Deuda de Clientes");
        jMIRegDeucli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRegDeucliActionPerformed(evt);
            }
        });
        jMenu2.add(jMIRegDeucli);

        jMenuBar1.add(jMenu2);

        jMenu3.setMnemonic('I');
        jMenu3.setText("Informes");
        jMenu3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        MILisProd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        MILisProd.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        MILisProd.setText("Lista de Productos");
        MILisProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MILisProdActionPerformed(evt);
            }
        });
        jMenu3.add(MILisProd);

        MIInfVentas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        MIInfVentas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        MIInfVentas.setText("Informe de Ventas");
        MIInfVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIInfVentasActionPerformed(evt);
            }
        });
        jMenu3.add(MIInfVentas);

        jMenuBar1.add(jMenu3);

        jMHerramienta.setText("Herramientas");
        jMHerramienta.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        MIOperador.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK));
        MIOperador.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        MIOperador.setText("Reg. Usuario");
        MIOperador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIOperadorActionPerformed(evt);
            }
        });
        jMHerramienta.add(MIOperador);

        MIProveedor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        MIProveedor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        MIProveedor.setText("Reg. Proveedor");
        MIProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIProveedorActionPerformed(evt);
            }
        });
        jMHerramienta.add(MIProveedor);

        jMIregCate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMIregCate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIregCate.setText("Reg. Categoría");
        jMIregCate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIregCateActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMIregCate);

        jMIregSect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMIregSect.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIregSect.setText("Reg. Sector");
        jMIregSect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIregSectActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMIregSect);

        jMI_regEmpres.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        jMI_regEmpres.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMI_regEmpres.setText("Reg. Empresa");
        jMI_regEmpres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMI_regEmpresActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMI_regEmpres);

        jMenuItem1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenuItem1.setText("Transpaso");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenuItem2.setText("Reg. Mesas");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMenuItem2);

        jMenuExpire.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenuExpire.setText("Fecha de Expiración");
        jMenuExpire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExpireActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMenuExpire);

        jMIBackup.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        jMIBackup.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMIBackup.setText("Copia de Seguridad");
        jMIBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIBackupActionPerformed(evt);
            }
        });
        jMHerramienta.add(jMIBackup);

        jMenuBar1.add(jMHerramienta);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 843, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 615, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jMIRProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRProActionPerformed

        if (r_pro != null) {
            if (!r_pro.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_pro = new R_Productos();
                }

                jDPPrincipal.add(r_pro);
                Location loc = new Location(jDPPrincipal, r_pro);
                int x = loc.getX();
                int y = loc.getY();
                r_pro.setLocation(x, y);
                r_pro.show();
            }
        } else {
            r_pro = new R_Productos();
            jDPPrincipal.add(r_pro);
            Location loc = new Location(jDPPrincipal, r_pro);
            int x = loc.getX();
            int y = loc.getY();
            r_pro.setLocation(x, y);
            r_pro.show();
        }


    }//GEN-LAST:event_jMIRProActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // backImg();
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMIVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIVentaActionPerformed
        if (ven != null) {
            if (!ven.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    ven = new Ventas_new();
                }
                jDPPrincipal.add(ven);
                Location loc = new Location(jDPPrincipal, ven);
                int x = loc.getX();
                int y = loc.getY();
                ven.setLocation(x, y);
                ven.show();
            }
        } else {
            ven = new Ventas_new();
            jDPPrincipal.add(ven);
            Location loc = new Location(jDPPrincipal, ven);
            int x = loc.getX();
            int y = loc.getY();
            ven.setLocation(x, y);
            ven.show();
        }
        
        
        
    }//GEN-LAST:event_jMIVentaActionPerformed

    private void jMIRegClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRegClieActionPerformed
        if (r_cli != null) {
            if (!r_cli.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                     r_cli = new R_Clientes();
                }
                jDPPrincipal.add(r_cli);
                Location loc = new Location(jDPPrincipal, r_cli);
                int x = loc.getX();
                int y = loc.getY();
                r_cli.setLocation(x, y);
                r_cli.show();
            }

        } else {
            r_cli = new R_Clientes();
            jDPPrincipal.add(r_cli);
            Location loc = new Location(jDPPrincipal, r_cli);
            int x = loc.getX();
            int y = loc.getY();
            r_cli.setLocation(x, y);
            r_cli.show();
        }
    }//GEN-LAST:event_jMIRegClieActionPerformed

    private void MIInfVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIInfVentasActionPerformed
        if (i_ven != null) {
            if (!i_ven.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    i_ven = new inf_venta();
                }
                jDPPrincipal.add(i_ven);
                Location loc = new Location(jDPPrincipal, i_ven);
                int x = loc.getX();
                int y = loc.getY();
                i_ven.setLocation(x, y);

                i_ven.show();

            }
        } else {
            i_ven = new inf_venta();
            jDPPrincipal.add(i_ven);
            Location loc = new Location(jDPPrincipal, i_ven);
            int x = loc.getX();
            int y = loc.getY();
            i_ven.setLocation(x, y);
            i_ven.show();
        }
    }//GEN-LAST:event_MIInfVentasActionPerformed

    private void MILisProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MILisProdActionPerformed
        if (i_lisp != null) {
            if (!i_lisp.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    i_lisp = new inf_lisProd1();
                }
                jDPPrincipal.add(i_lisp);
                Location loc = new Location(jDPPrincipal, i_lisp);
                int x = loc.getX();
                int y = loc.getY();
                i_lisp.setLocation(x, y);
                i_lisp.show();
            }
        } else {
            i_lisp = new inf_lisProd1();
            jDPPrincipal.add(i_lisp);
            Location loc = new Location(jDPPrincipal, i_lisp);
            int x = loc.getX();
            int y = loc.getY();
            i_lisp.setLocation(x, y);
            i_lisp.show();
        }
    }//GEN-LAST:event_MILisProdActionPerformed

    private void MIAnuvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIAnuvenActionPerformed

        if (a_ven != null) {
            if (!a_ven.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                     a_ven = new AnularVentas();
                }
                jDPPrincipal.add(a_ven);
                Location loc = new Location(jDPPrincipal, a_ven);
                int x = loc.getX();
                int y = loc.getY();
                a_ven.setLocation(x, y);
                a_ven.show();
            }
        } else {
            a_ven = new AnularVentas();
            jDPPrincipal.add(a_ven);
            Location loc = new Location(jDPPrincipal, a_ven);
            int x = loc.getX();
            int y = loc.getY();
            a_ven.setLocation(x, y);
            a_ven.show();
        }
    }//GEN-LAST:event_MIAnuvenActionPerformed

    private void MIOperadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIOperadorActionPerformed
        if (r_usu != null) {
            if (!r_usu.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                     r_usu = new reg_usuario();
                }
                jDPPrincipal.add(r_usu);
                Location loc = new Location(jDPPrincipal, r_usu);
                int x = loc.getX();
                int y = loc.getY();
                r_usu.setLocation(x, y);
                r_usu.show();
            }
        } else {
            r_usu = new reg_usuario();
            jDPPrincipal.add(r_usu);
            Location loc = new Location(jDPPrincipal, r_usu);
            int x = loc.getX();
            int y = loc.getY();
            r_usu.setLocation(x, y);
            r_usu.show();
        }
    }//GEN-LAST:event_MIOperadorActionPerformed

    private void MIProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIProveedorActionPerformed
        if (r_prove != null) {
            if (!r_prove.isShowing()) {
                /*jDPPrincipal.remove(0);
                 r_prove = new reg_provee();*/
                //System.out.print(jDPPrincipal.getComponentCount());
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_prove = new reg_provee();
                }
                jDPPrincipal.add(r_prove);
                Location loc = new Location(jDPPrincipal, r_prove);
                int x = loc.getX();
                int y = loc.getY();
                r_prove.setLocation(x, y);
                r_prove.show();
            }
        } else {
            r_prove = new reg_provee();
            jDPPrincipal.add(r_prove);
            Location loc = new Location(jDPPrincipal, r_prove);
            int x = loc.getX();
            int y = loc.getY();
            r_prove.setLocation(x, y);
            r_prove.show();
        }
    }//GEN-LAST:event_MIProveedorActionPerformed

    private void jMI_regEmpresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMI_regEmpresActionPerformed
        if (r_emp != null) {
            if (!r_emp.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_emp = new reg_empresa();
                }
                    jDPPrincipal.add(r_emp);
                    Location loc = new Location(jDPPrincipal, r_emp);
                    int x = loc.getX();
                    int y = loc.getY();
                    r_emp.setLocation(x, y);
                    r_emp.show();
                    //System.out.println("despues del show 1");
                }
            
        } else {
            r_emp = new reg_empresa();
            jDPPrincipal.add(r_emp);
            Location loc = new Location(jDPPrincipal, r_emp);
            int x = loc.getX();
            int y = loc.getY();
            r_emp.setLocation(x, y);
            r_emp.show();
            //System.out.println("despues del show ");
        }
        
    }//GEN-LAST:event_jMI_regEmpresActionPerformed

    private void jMIregCateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIregCateActionPerformed
        if (r_cate != null) {
            if (!r_cate.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_cate = new reg_categ();
                }
                jDPPrincipal.add(r_cate);
                Location loc = new Location(jDPPrincipal, r_cate);
                int x = loc.getX();
                int y = loc.getY();
                r_cate.setLocation(x, y);
                r_cate.show();
                //System.out.println("despues del show 1");

            }
        } else {
            r_cate = new reg_categ();
            jDPPrincipal.add(r_cate);
            Location loc = new Location(jDPPrincipal, r_cate);
            int x = loc.getX();
            int y = loc.getY();
            r_cate.setLocation(x, y);
            r_cate.show();
            //System.out.println("despues del show ");
        }
    }//GEN-LAST:event_jMIregCateActionPerformed

    private void jMIregSectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIregSectActionPerformed
        if (r_sect != null) {
            if (!r_sect.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_sect = new reg_sect();
                }
                jDPPrincipal.add(r_sect);
                Location loc = new Location(jDPPrincipal, r_sect);
                int x = loc.getX();
                int y = loc.getY();
                r_sect.setLocation(x, y);
                r_sect.show();
                //System.out.println("despues del show 1");
            }

        } else {
            r_sect = new reg_sect();
            jDPPrincipal.add(r_sect);
            Location loc = new Location(jDPPrincipal, r_sect);
            int x = loc.getX();
            int y = loc.getY();
            r_sect.setLocation(x, y);
            r_sect.show();
            //System.out.println("despues del show ");
        }

    }//GEN-LAST:event_jMIregSectActionPerformed

    private void jMIregmoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIregmoneActionPerformed
        if (r_mone != null) {
            if (!r_mone.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_mone = new reg_moneda();
                }
                jDPPrincipal.add(r_mone);
                Location loc = new Location(jDPPrincipal, r_mone);
                int x = loc.getX();
                int y = loc.getY();
                r_mone.setLocation(x, y);
                r_mone.show();
            }
        } else {
            r_mone = new reg_moneda();
            jDPPrincipal.add(r_mone);
            Location loc = new Location(jDPPrincipal, r_mone);
            int x = loc.getX();
            int y = loc.getY();
            r_mone.setLocation(x, y);
            r_mone.show();
        }
    }//GEN-LAST:event_jMIregmoneActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded

    }//GEN-LAST:event_formComponentAdded

    private void jMIGenCodBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGenCodBarActionPerformed
        GenBarcode genBarcode = new GenBarcode();
        genBarcode.setVisible(true);
    }//GEN-LAST:event_jMIGenCodBarActionPerformed

    private void jMIRegDeucliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRegDeucliActionPerformed

        if (r_dcl != null) {
            if (!r_dcl.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_dcl = new reg_deucli();
                }
                jDPPrincipal.add(r_dcl);
                Location loc = new Location(jDPPrincipal, r_dcl);
                int x = loc.getX();
                int y = loc.getY();
                r_dcl.setLocation(x, y);
                r_dcl.show();
                //System.out.println("despues del show 1");
            }

        } else {
            r_dcl = new reg_deucli();
            jDPPrincipal.add(r_dcl);
            Location loc = new Location(jDPPrincipal, r_dcl);
            int x = loc.getX();
            int y = loc.getY();
            r_dcl.setLocation(x, y);
            r_dcl.show();
            //System.out.println("despues del show ");
        }
    }//GEN-LAST:event_jMIRegDeucliActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        TranspasoAcces tra = new TranspasoAcces();
        tra.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
         if (r_mesas != null) {
            if (!r_mesas.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_mesas = new reg_mesas();
                }
                    jDPPrincipal.add(r_mesas);
                    Location loc = new Location(jDPPrincipal, r_mesas);
                    int x = loc.getX();
                    int y = loc.getY();
                    r_mesas.setLocation(x, y);
                    r_mesas.show();
                    //System.out.println("despues del show 1");
                }
            
        } else {
            r_mesas = new reg_mesas();
            jDPPrincipal.add(r_mesas);
            Location loc = new Location(jDPPrincipal, r_mesas);
            int x = loc.getX();
            int y = loc.getY();
            r_mesas.setLocation(x, y);
            r_mesas.show();
            //System.out.println("despues del show ");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuExpireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExpireActionPerformed
         if (r_expire != null) {
            if (!r_expire.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_expire = new reg_epire();
                }
                jDPPrincipal.add(r_expire);
                Location loc = new Location(jDPPrincipal, r_expire);
                int x = loc.getX();
                int y = loc.getY();
                r_expire.setLocation(x, y);
                r_expire.show();
                //System.out.println("despues del show 1");
            }

        } else {
            r_expire =  new reg_epire();
            jDPPrincipal.add(r_expire);
            Location loc = new Location(jDPPrincipal, r_expire);
            int x = loc.getX();
            int y = loc.getY();
            r_expire.setLocation(x, y);
            r_expire.show();
            //System.out.println("despues del show ");
        }
    }//GEN-LAST:event_jMenuExpireActionPerformed

    private void jMIBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIBackupActionPerformed
  
        try {
            consultaEmpresa();
            if(emp != null){
               if(Util.exportDb2(emp)){
                 JOptionPane.showMessageDialog(null, "Compia finalizado.");
                 GuardarBKDate();
            }else{
                 JOptionPane.showMessageDialog(null, "NO se a podido realizar la copia, Salga y entre de nuevo al sistema..");
            } 
            }else{
                JOptionPane.showMessageDialog(null, "Configurar sistema para copia de seguridad.");
            }
            
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
                

    }//GEN-LAST:event_jMIBackupActionPerformed

    private void jMICobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICobroActionPerformed
         if (r_cobro != null) {
            if (!r_cobro.isShowing()) {
                if (jDPPrincipal.getComponentCount() >= 0) {
                    jDPPrincipal.removeAll();
                    r_cobro = new reg_cobro();
                }
                jDPPrincipal.add(r_cobro);
                Location loc = new Location(jDPPrincipal, r_mone);
                int x = loc.getX();
                int y = loc.getY();
                r_cobro.setLocation(x, y);
                r_cobro.show();
            }
        } else {
            r_cobro = new reg_cobro();
            jDPPrincipal.add(r_cobro);
            Location loc = new Location(jDPPrincipal, r_cobro);
            int x = loc.getX();
            int y = loc.getY();
            r_cobro.setLocation(x, y);
            r_cobro.show();
        }
    }//GEN-LAST:event_jMICobroActionPerformed

    private void GuardarBKDate() {
        String sql;
        PreparedStatement pst;
        Coneccion con = new Coneccion();
        try {
            sql = "UPDATE empresa SET emp_bkdate=?";

            pst = con.getCon().prepareCall(sql);
            
            Date date = new Date();
            pst.setDate(1, new java.sql.Date(date.getTime()));

            int res = pst.executeUpdate();
            if (res == 1){
                System.out.println("update finalizado");
            }
            
            con.close();
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error !"+e.getMessage());
        }
    }

         
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    private void backImg() {
        //jDPPrincipal = new JDesktopPaneComImage("/image/logo1.png");
        //this.add(jDPPrincipal);
        this.setContentPane(jDPPrincipal);

    }

    public void logo() {
        JLabel jLogo = new JLabel();
        Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/Acceso02.jpg"));
        Icon icon = new ImageIcon(image);
        jLogo.setIcon(icon);
        jLogo.setVisible(true);
        jDPPrincipal.add(jLogo);
        Location loc = new Location(jDPPrincipal, jLogo);
        int x = loc.getX();
        int y = loc.getY();
        jLogo.setLocation(x, y);
        jLogo.show();

    }

    public void consultarMoneda() {
        String sql;
        Calendar Cfecha = new GregorianCalendar();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sql = "select mon_codigo,mon_dolar,mon_pes,mon_real,mon_fecha from moneda where mon_fecha='" + sdf.format(Cfecha.getTime()) + "'";
        Coneccion con = new Coneccion();
        ResultSet rs;
        try {
            con.consulta(sql);
            rs = con.getRs();
            if (!rs.next()) {
                r_mone = new reg_moneda();
                jDPPrincipal.add(r_mone);
                Location loc = new Location(jDPPrincipal, r_mone);
                int x = loc.getX();
                int y = loc.getY();
                r_mone.setLocation(x, y);
                r_mone.show();
            }
            con.close();
        } catch (Exception e) {
            if (con != null) {
                con.close();
            }
        }
    }  
     
     private void consultaEmpresa(){
        try {
            Coneccion con = new Coneccion();
            String sql = "Select emp_codigo,emp_nombre,emp_descri,emp_direc,emp_tele,"
                    + "emp_ruc,emp_timbrado,emp_facvalidez,emp_numfac1,emp_numfac2,"
                    + "emp_numfac3,emp_utilidad,emp_desmay,emp_cantick,emp_cantickleg,emp_stock_min,emp_expire,emp_dirdb,emp_dirbk,emp_bkdate from empresa";
            con.consulta(sql);
            ResultSet rs;
            rs = con.getRs();
            if (rs.next()) {
                emp = new Empresa();
                emp.setEmp_codigo(rs.getInt("emp_codigo"));
                emp.setEmp_nombre(rs.getString("emp_nombre"));
                emp.setEmp_descri(rs.getString("emp_descri"));
                emp.setEmp_direc(rs.getString("emp_direc"));
                emp.setEmp_tele(rs.getString("emp_tele"));
                emp.setEmp_ruc(rs.getString("emp_ruc"));
                emp.setEmp_timbrado(rs.getInt("emp_timbrado"));
                emp.setEmp_facvalidez(rs.getDate("emp_facvalidez"));
                emp.setEmp_numfac1(rs.getInt("emp_numfac1"));
                emp.setEmp_numfac2(rs.getInt("emp_numfac2"));
                emp.setEmp_numfac3(rs.getInt("emp_numfac3"));
                emp.setEmp_utilidad(rs.getDouble("emp_utilidad"));
                emp.setEmp_descuem(rs.getDouble("emp_desmay"));
                emp.setEmp_cantick(rs.getInt("emp_cantick"));
                emp.setEmp_cantickleg(rs.getInt("emp_cantickleg"));
                emp.setEmp_stock_min(rs.getInt("emp_stock_min"));
                emp.setEmp_expire(rs.getDate("emp_expire"));
                emp.setEmp_dirDB(rs.getString("emp_dirdb"));
                emp.setEmp_dirBK(rs.getString("emp_dirbk"));
                emp.setEmp_bkdate(rs.getDate("emp_bkdate"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("frames.reg_empresa.consulta()"+e.getMessage());
        }
    }
     
     private void generarCopiadeSeguridad(){
         consultaEmpresa();
         
         if(emp != null){
             if(emp.getEmp_bkdate() != null){
                 Date date = new Date();
                 SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                 
                 if(sdf.format(date).compareTo(sdf.format(emp.getEmp_bkdate()))>0){
                     try{
                          if(emp.getEmp_dirDB() != null && emp.getEmp_dirBK() != null){
                                Util.exportDb2(emp);
                                GuardarBKDate();
                          }
                     }catch(Exception e){
                         System.err.println(e.getMessage());
                     }
                 }
             }else{
                 if(emp.getEmp_dirDB() != null && emp.getEmp_dirBK() != null){
                     try{
                        Util.exportDb2(emp);
                        GuardarBKDate();
                     }catch(Exception e){
                         System.err.println(e.getMessage());
                     }
                 }
             }
         }
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MIAnuven;
    private javax.swing.JMenuItem MIInfVentas;
    private javax.swing.JMenuItem MILisProd;
    private javax.swing.JMenuItem MIOperador;
    private javax.swing.JMenuItem MIProveedor;
    private javax.swing.JMenu jMHerramienta;
    private javax.swing.JMenuItem jMIBackup;
    private javax.swing.JMenuItem jMICobro;
    private javax.swing.JMenuItem jMIGenCodBar;
    private javax.swing.JMenuItem jMIRPro;
    private javax.swing.JMenuItem jMIRegClie;
    private javax.swing.JMenuItem jMIRegDeucli;
    private javax.swing.JMenuItem jMIVenta;
    private javax.swing.JMenuItem jMI_regEmpres;
    private javax.swing.JMenuItem jMIregCate;
    private javax.swing.JMenuItem jMIregSect;
    private javax.swing.JMenuItem jMIregmone;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuExpire;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    // End of variables declaration//GEN-END:variables
}
