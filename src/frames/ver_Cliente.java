/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Connection.Coneccion;
import Entity.Clientes;
import Entity.LetraMayuscula;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Melanio
 */
public class ver_Cliente extends javax.swing.JDialog {

    /**
     * Creates new form ver_Cliente
     */
    ArrayList<Clientes> aCli = new ArrayList<Clientes>();
    DefaultTableModel modelo;
    DecimalFormat df = new DecimalFormat("###,###,###.##");
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    TableRowSorter<TableModel> sorter;
    Clientes vClie = new Clientes();

    Calendar cal = new GregorianCalendar();

    public ver_Cliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        txtBusqueda.getDocument().addDocumentListener(
                new DocumentListener() {
                    public void changedUpdate(DocumentEvent e) {
                        filtrar();
                    }
                    public void insertUpdate(DocumentEvent e) {
                        filtrar();
                    }
                    public void removeUpdate(DocumentEvent e) {
                        filtrar();
                    }
                });
        
        TableModel();
        consultar();
        
    }

    public void TableModel() {
        modelo = (DefaultTableModel) TablaClientes.getModel();
        modelo.setRowCount(0);
        this.TablaClientes.setModel(modelo);
    }

    private void filtrar() {
        RowFilter<TableModel, Object> rf = null;
        int indiceColumnaTabla = 1;
        try {
            rf = RowFilter.regexFilter(txtBusqueda.getText(), indiceColumnaTabla);
        } catch (java.util.regex.PatternSyntaxException e) {
            System.out.println(e.getMessage());
        }
        sorter.setRowFilter(rf);
    }

    public void consultar() {
        String sql = "select cli_codigo,cli_ci,cli_nombre,cli_tel,cli_direc,"
                + "cli_ruc,cli_fecnac from clientes order by cli_codigo";

        Coneccion con = new Coneccion();
        ResultSet rs = null;
        Clientes cli = null;
        aCli.clear();
        //modelo.setNumRows(0);

        try {
            con.consulta(sql);
            rs = con.getRs();
            while (rs.next()) {
                cli = new Clientes();
                cli.setCli_codigo(rs.getInt("cli_codigo"));
                cli.setCli_nombre(rs.getString("cli_nombre"));
                cli.setCli_ci(rs.getInt("cli_ci"));
                cli.setCli_ruc(rs.getString("cli_ruc"));
                cli.setCli_direc(rs.getString("cli_direc"));
                cli.setCli_tel(rs.getString("cli_tel"));
                cli.setCli_fecnac(rs.getDate("cli_fecnac"));
                aCli.add(cli);
            }

            if (aCli.size() > 0) {
                CargarTabla();
            }

            con.close();
        } catch (Exception e) {
            if (con != null) {
                con.close();
            }
        }
    }

    public void CargarTabla() {
        modelo.setRowCount(0);
        this.TablaClientes.setModel(modelo);
        for (int i = 0; i < aCli.size(); i++) {
            Clientes c = aCli.get(i);
            //System.out.print(c.toString());
            Object[] cli = new Object[modelo.getColumnCount()];
            cli[0] = c.getCli_codigo();
            cli[1] = c.getCli_nombre();
            cli[2] = c.getCli_ruc().toString().isEmpty()?c.getCli_ci():c.getCli_ruc();
            cli[3] = c.getCli_tel();
           
            modelo.addRow(cli);
        }

        sorter = new TableRowSorter<TableModel>(modelo);
        TablaClientes.setRowSorter(sorter);
        TablaClientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        proCodigoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();
        btNueClie = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/lupa64.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 11, 30, 30));

        proCodigoLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        proCodigoLabel.setText("Filtrar:");
        getContentPane().add(proCodigoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 30));

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        TablaClientes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        TablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Documento", "Teléfono"
            }
        ));
        TablaClientes.setUpdateSelectionOnSort(false);
        TablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaClientesMouseClicked(evt);
            }
        });
        TablaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaClientes);
        if (TablaClientes.getColumnModel().getColumnCount() > 0) {
            TablaClientes.getColumnModel().getColumn(1).setMinWidth(200);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 660, 250));

        btNueClie.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btNueClie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ico_add_clie.png"))); // NOI18N
        btNueClie.setMnemonic('N');
        btNueClie.setText("Nuevo Cliente");
        btNueClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNueClieActionPerformed(evt);
            }
        });
        getContentPane().add(btNueClie, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        txtBusqueda.setDocument(new LetraMayuscula());
        txtBusqueda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtBusquedaPropertyChange(evt);
            }
        });
        getContentPane().add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 600, 30));

        setSize(new java.awt.Dimension(708, 410));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaClientesMouseClicked
        editar();
    }//GEN-LAST:event_TablaClientesMouseClicked

    private void TablaClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaClientesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            editar();
        }
    }//GEN-LAST:event_TablaClientesKeyPressed

    private void btNueClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNueClieActionPerformed
        reg_Clientes rcli = new reg_Clientes(null,true);
        rcli.setVisible(true);
        txtBusqueda.grabFocus();
    }//GEN-LAST:event_btNueClieActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       
    }//GEN-LAST:event_formKeyPressed

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void txtBusquedaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtBusquedaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaPropertyChange

    public void editar() {

        int filasele = TablaClientes.getSelectedRow();

        int xx = Integer.parseInt(TablaClientes.getValueAt(filasele, 0).toString());

        for (Clientes aCli1 : aCli) {
            vClie = aCli1;
            if (vClie.getCli_codigo() == xx) {
                //System.out.println("Codigo seleccionado "+pro.toString());
                break;
            }
        }

        this.dispose();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ver_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ver_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ver_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ver_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ver_Cliente dialog = new ver_Cliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaClientes;
    private javax.swing.JButton btNueClie;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel proCodigoLabel;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
