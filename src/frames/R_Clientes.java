/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Connection.Coneccion;
import Entity.Clientes;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import Entity.LetraMayuscula;

/**
 *
 * @author Melanio
 */
public class R_Clientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form R_Clientes
     */
    ArrayList<Clientes> aCli = new ArrayList<>();
    DefaultTableModel modelo;
    DecimalFormat df = new DecimalFormat("###,###,###.##");
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    TableRowSorter<TableModel> sorter;

    Calendar cal = new GregorianCalendar();

    public R_Clientes() {
        initComponents();
        txtBusqueda.getDocument().addDocumentListener(
                new DocumentListener() {
                    @Override
                    public void changedUpdate(DocumentEvent e) {
                        filtrar();
                    }

                    @Override
                    public void insertUpdate(DocumentEvent e) {
                        filtrar();
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e) {
                        filtrar();
                    }
                });
        TableModel();
        consultar();

    }

    private void TableModel() {
        modelo = (DefaultTableModel) TablaClientes.getModel();
        modelo.setRowCount(0);
        this.TablaClientes.setModel(modelo);
    }

    private void filtrar() {
        RowFilter<TableModel, Object> rf = null;
        int indiceColumnaTabla = 1;
        try {
            rf = RowFilter.regexFilter(txtBusqueda.getText(), indiceColumnaTabla);
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        sorter.setRowFilter(rf);
    }

    private void consultar() {
        String sql = "select cli_codigo,cli_ci,cli_nombre,cli_tel,cli_direc,"
                + "cli_ruc,cli_fecnac,cli_lispre from clientes order by cli_codigo";

        Coneccion con = new Coneccion();
        ResultSet rs;
        Clientes cli;
        aCli.clear();
        modelo.setNumRows(0);

        try {
            con.consulta(sql);
            rs = con.getRs();
            while (rs.next()) {
                cli = new Clientes();
                cli.setCli_codigo(rs.getInt("cli_codigo"));
                cli.setCli_nombre(rs.getString("cli_nombre"));
                cli.setCli_ci(rs.getInt("cli_ci"));
                cli.setCli_ruc(rs.getString("cli_ruc"));
                cli.setCli_direc(rs.getString("cli_direc"));
                cli.setCli_tel(rs.getString("cli_tel"));
                cli.setCli_fecnac(rs.getDate("cli_fecnac"));
                cli.setCli_lispre(rs.getInt("cli_lispre"));
                aCli.add(cli);
            }

            if (aCli.size() > 0) {
                CargarTabla();
            }

            con.close();
        } catch (SQLException e) {
            if (con.getCon() != null) {
                con.close();
            }
        }
    }

    public void CargarTabla() {
        modelo.setNumRows(0);
        this.TablaClientes.setModel(modelo);
        for (Clientes c : aCli) {
            //System.out.print(c.toString());
            Object[] cli = new Object[modelo.getColumnCount()];
            cli[0] = c.getCli_codigo();
            cli[1] = c.getCli_nombre();
            cli[2] = c.getCli_ci();
            cli[3] = c.getCli_ruc();
            cli[4] = c.getCli_tel();
            cli[5] = c.getCli_direc();
            if(c.getCli_fecnac() != null){
               cli[6] = sdf.format(c.getCli_fecnac()); 
            }else{
               cli[6] =""; 
            }
            

            modelo.addRow(cli);
        }

        sorter = new TableRowSorter<TableModel>(modelo);
        TablaClientes.setRowSorter(sorter);
        TablaClientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBusqueda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        proCodigoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txCI = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txRUC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txDirec = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txTel = new javax.swing.JTextField();
        txFec = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jCBlispre = new javax.swing.JComboBox();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setClosable(true);
        setTitle("Registrar Clientes");
        getContentPane().setLayout(null);

        txtBusqueda.setDocument(new LetraMayuscula());
        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        getContentPane().add(txtBusqueda);
        txtBusqueda.setBounds(80, 10, 490, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/lupa64.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 10, 30, 30);

        proCodigoLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        proCodigoLabel.setText("Filtrar:");
        getContentPane().add(proCodigoLabel);
        proCodigoLabel.setBounds(10, 10, 39, 30);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        TablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "CI", "RUC", "Teléfono", "Dirección", "Fecha Nac."
            }
        ));
        TablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaClientes);
        if (TablaClientes.getColumnModel().getColumnCount() > 0) {
            TablaClientes.getColumnModel().getColumn(1).setMinWidth(200);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 780, 150);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Código:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, -1, -1));

        txCodigo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txCodigo.setEnabled(false);
        jPanel1.add(txCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 11, 100, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 44, -1, -1));

        txNombre.setDocument(new LetraMayuscula());
        txNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 700, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("C.I N°:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 73, -1, -1));

        txCI.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txCI, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 245, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("RUC N°:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 102, -1, -1));

        txRUC.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txRUC, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 245, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Dirección:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 131, -1, -1));

        txDirec.setDocument(new LetraMayuscula());
        txDirec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txDirec, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 700, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Fecha Nac.:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Lista de Precio:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, -1, -1));

        txTel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(txTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 234, -1));

        try {
            txFec.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txFec.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txFec, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 180, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Teléfono:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 189, -1, -1));

        jCBlispre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCBlispre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MINORISTA", "MAYORISTA" }));
        jPanel1.add(jCBlispre, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 130, -1));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 200, 780, 230);

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ico_save.png"))); // NOI18N
        saveButton.setMnemonic('G');
        saveButton.setText("Guardar");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton);
        saveButton.setBounds(480, 440, 130, 40);

        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ico_modificar.png"))); // NOI18N
        refreshButton.setMnemonic('A');
        refreshButton.setText("Actualizar");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        getContentPane().add(refreshButton);
        refreshButton.setBounds(330, 440, 140, 41);

        newButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ico_nuevo.png"))); // NOI18N
        newButton.setMnemonic('N');
        newButton.setText("Nuevo");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        getContentPane().add(newButton);
        newButton.setBounds(50, 440, 120, 41);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ico_delete.png"))); // NOI18N
        deleteButton.setMnemonic('E');
        deleteButton.setText("Eliminar");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton);
        deleteButton.setBounds(180, 440, 140, 41);

        btCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ico_cancel.png"))); // NOI18N
        btCancel.setMnemonic('C');
        btCancel.setText("Cancelar");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btCancel);
        btCancel.setBounds(620, 440, 140, 40);

        setBounds(0, 0, 813, 529);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Clientes cli = new Clientes();

        cli.setCli_nombre(txNombre.getText());
        cli.setCli_ci(Integer.parseInt(txCI.getText()));
        cli.setCli_ruc(txRUC.getText());
        cli.setCli_direc(txDirec.getText());
        cli.setCli_tel(txTel.getText());
        cli.setCli_lispre(jCBlispre.getSelectedIndex());
        try {
            if (!txFec.getText().trim().equalsIgnoreCase("/  /")) {
                cli.setCli_fecnac(sdf.parse(txFec.getText()));
            } else {
                cli.setCli_fecnac(cal.getTime());
            }

        } catch (ParseException ex) {
            Logger.getLogger(R_Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }

        PreparedStatement pSta;
        Coneccion con = new Coneccion();
        try {
            Integer cli_codigo;
            String sql = "Insert into clientes(cli_ci,cli_nombre,cli_tel,cli_direc,cli_fecnac,cli_ruc,cli_lispre ) "
                    + "values(?,?,?,?,?,?,?)";
            pSta = con.getCon().prepareStatement(sql);
            pSta.setInt(1, cli.getCli_ci());
            pSta.setString(2, cli.getCli_nombre());
            pSta.setString(3, cli.getCli_tel());
            pSta.setString(4, cli.getCli_direc());
            pSta.setDate(5, new java.sql.Date(cli.getCli_fecnac().getTime()));
            pSta.setString(6, cli.getCli_ruc());
            pSta.setInt(7, cli.getCli_lispre());

            int x = pSta.executeUpdate();

            if (x == 1) {
                JOptionPane.showMessageDialog(null, "Insertado Con éxito");
                limpiar();
            }
            consultar();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            if (con.getCon() != null) {
                con.close();
            }

        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

        Clientes cli = new Clientes();
        cli.setCli_codigo(Integer.parseInt(txCodigo.getText()));
        cli.setCli_nombre(txNombre.getText());
        cli.setCli_ci(Integer.parseInt(txCI.getText()));
        cli.setCli_ruc(txRUC.getText());
        cli.setCli_tel(txTel.getText());
        cli.setCli_direc(txDirec.getText());
        cli.setCli_lispre(jCBlispre.getSelectedIndex());
        try {
            if (!txFec.getText().trim().equalsIgnoreCase("/  /")) {
                cli.setCli_fecnac(sdf.parse(txFec.getText()));
            } else {
                cli.setCli_fecnac(cal.getTime());
            }
        } catch (ParseException ex) {
            Logger.getLogger(R_Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }

        Coneccion con = new Coneccion();
        PreparedStatement pS;
        try {
            String sql = "UPDATE clientes set cli_ci=?,cli_nombre=?,"
                    + "cli_tel=?,cli_direc=?,cli_fecnac=?,cli_ruc=?,cli_lispre=? where cli_codigo=? ";
            pS = con.getCon().prepareCall(sql);
            pS.setInt(1, cli.getCli_ci());
            pS.setString(2, cli.getCli_nombre());
            pS.setString(3, cli.getCli_tel());
            pS.setString(4, cli.getCli_direc());
            pS.setDate(5, new java.sql.Date(cli.getCli_fecnac().getTime()));
            pS.setString(6, cli.getCli_ruc());
            pS.setInt(7, cli.getCli_lispre());
             pS.setInt(8, cli.getCli_codigo());

            int res = pS.executeUpdate();
            if (res == 1) {
                JOptionPane.showMessageDialog(this, "Datos Actualizados con éxito");
                limpiar();
            }
            consultar();

            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            if (con.getCon() != null) {
                con.close();
            }

        }

    }//GEN-LAST:event_refreshButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        limpiar();
        saveButton.setEnabled(true);
        refreshButton.setEnabled(false);
        deleteButton.setEnabled(false);
        txNombre.grabFocus();

    }//GEN-LAST:event_newButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        Coneccion con = new Coneccion();
        String sql="Delete from clientes where cli_codigo="+Integer.parseInt(txCodigo.getText());
        con.update(sql);
        consultar();
        limpiar();
        con.close();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        limpiar();
    }//GEN-LAST:event_btCancelActionPerformed

    private void TablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaClientesMouseClicked
        editar();
    }//GEN-LAST:event_TablaClientesMouseClicked

    public void editar() {
        refreshButton.setEnabled(true);
        deleteButton.setEnabled(true);
        saveButton.setEnabled(false);
        int filasele = TablaClientes.getSelectedRow();

        int xx = Integer.parseInt(TablaClientes.getValueAt(filasele, 0).toString());
        Clientes cli = new Clientes();
        for (Clientes aCli1 : aCli) {
            cli = aCli1;
            if (cli.getCli_codigo() == xx) {
                //System.out.println("Codigo seleccionado "+pro.toString());
                break;
            }
        }

        txCodigo.setText(cli.getCli_codigo().toString());
        txNombre.setText(cli.getCli_nombre());
        txDirec.setText(cli.getCli_direc());
        txCI.setText(cli.getCli_ci().toString());
        txRUC.setText(cli.getCli_ruc());
        txTel.setText(cli.getCli_tel());
        txFec.setText(sdf.format(cli.getCli_fecnac()));
        jCBlispre.setSelectedIndex(cli.getCli_lispre());
    }

    public void limpiar() {
        txCodigo.setText("");
        txCI.setText("");
        txDirec.setText("");
        txFec.setValue(null);
        txNombre.setText("");
        txRUC.setText("");
        txTel.setText("");
        txtBusqueda.setText("");
        jCBlispre.setSelectedIndex(0);
        txNombre.grabFocus();

        newButton.setEnabled(true);
        deleteButton.setEnabled(false);
        refreshButton.setEnabled(false);
        saveButton.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaClientes;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox jCBlispre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newButton;
    private javax.swing.JLabel proCodigoLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField txCI;
    private javax.swing.JTextField txCodigo;
    private javax.swing.JTextField txDirec;
    private javax.swing.JFormattedTextField txFec;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txRUC;
    private javax.swing.JTextField txTel;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
