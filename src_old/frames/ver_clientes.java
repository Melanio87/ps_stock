/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Connection.Coneccion;
import Entity.Clientes;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Melanio
 */
public class ver_clientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form R_Clientes
     */
    ArrayList<Clientes> aCli = new ArrayList<Clientes>();
    DefaultTableModel modelo;
    DecimalFormat df = new DecimalFormat("###,###,###.##");
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    TableRowSorter<TableModel> sorter;
    
     Calendar cal = new GregorianCalendar();
    
    public ver_clientes() {
        initComponents();
        
        txtBusqueda.getDocument().addDocumentListener(
                new DocumentListener() {
                    public void changedUpdate(DocumentEvent e) {
                        filtrar();
                    }

                    public void insertUpdate(DocumentEvent e) {
                        filtrar();
                    }

                    public void removeUpdate(DocumentEvent e) {
                        filtrar();
                    }
                });
        
        TableModel();
        consultar();
        
    }
    
    public void TableModel() {
        modelo = (DefaultTableModel) TablaClientes.getModel();
        modelo.setRowCount(0);
        this.TablaClientes.setModel(modelo);
    }
    
    private void filtrar() {
        RowFilter<TableModel, Object> rf = null;
        int indiceColumnaTabla = 1;
        try {
            rf = RowFilter.regexFilter(txtBusqueda.getText(), indiceColumnaTabla);
        } catch (java.util.regex.PatternSyntaxException e) {
        }
        sorter.setRowFilter(rf);
    }
    
    public void consultar() {
        String sql = "select cli_codigo,cli_ci,cli_nombre,cli_tel,cli_direc,"
                + "cli_ruc,cli_fecnac from clientes order by cli_codigo";
        
        Coneccion con = new Coneccion();
        ResultSet rs = null;
        Clientes cli = null;
        aCli.clear();
        modelo.setNumRows(0);
        
        try {
            con.consulta(sql);
            rs = con.getRs();
            while (rs.next()) {
                cli = new Clientes();
                cli.setCli_codigo(rs.getInt("cli_codigo"));
                cli.setCli_nombre(rs.getString("cli_nombre"));
                cli.setCli_ci(rs.getInt("cli_ci"));
                cli.setCli_ruc(rs.getString("cli_ruc"));
                cli.setCli_direc(rs.getString("cli_direc"));
                cli.setCli_tel(rs.getString("cli_tel"));
                cli.setCli_fecnac(rs.getDate("cli_fecnac"));
                aCli.add(cli);
            }
            
            if (aCli.size() > 0) {
                CargarTabla();
            }
            
            con.close();
        } catch (Exception e) {
            if (con != null) {
                con.close();
            }
        }
    }
    
    public void CargarTabla() {
        modelo.setNumRows(0);
        this.TablaClientes.setModel(modelo);
        for (int i = 0; i < aCli.size(); i++) {
            Clientes c = aCli.get(i);
            //System.out.print(c.toString());
            Object[] cli = new Object[modelo.getColumnCount()];
            cli[0] = c.getCli_codigo();
            cli[1] = c.getCli_nombre();
            cli[2] = c.getCli_ci();
            cli[3] = c.getCli_ruc();
            cli[4] = c.getCli_tel();
            cli[5] = c.getCli_direc();
            cli[6] = sdf.format(c.getCli_fecnac());
            
            modelo.addRow(cli);
        }
        
        sorter = new TableRowSorter<TableModel>(modelo);
        TablaClientes.setRowSorter(sorter);
        TablaClientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBusqueda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        proCodigoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();

        setClosable(true);
        setTitle("Registrar Clientes");
        getContentPane().setLayout(null);

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        getContentPane().add(txtBusqueda);
        txtBusqueda.setBounds(80, 10, 490, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/lupa64.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 10, 30, 30);

        proCodigoLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        proCodigoLabel.setText("Filtrar:");
        getContentPane().add(proCodigoLabel);
        proCodigoLabel.setBounds(10, 10, 39, 30);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        TablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "CI", "RUC", "Teléfono", "Dirección", "Fecha Nac."
            }
        ));
        TablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaClientes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 790, 270);

        setBounds(0, 0, 827, 373);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void TablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaClientesMouseClicked
        editar();
    }//GEN-LAST:event_TablaClientesMouseClicked
    
    public void editar() {
      
        int filasele = TablaClientes.getSelectedRow();
        
        int xx = Integer.parseInt(TablaClientes.getValueAt(filasele, 0).toString());
        Clientes cli = new Clientes();
        for (int i = 0; i < aCli.size(); i++) {
            cli = aCli.get(i);
            if (cli.getCli_codigo() == xx) {
                //System.out.println("Codigo seleccionado "+pro.toString());
                break;
            }
        }
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaClientes;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel proCodigoLabel;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
